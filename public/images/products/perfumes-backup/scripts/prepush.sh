#!/bin/bash
set -e

echo "üîç Pipeline de Valida√ß√£o Pr√©-Push - JC Hair Studio"
echo "=================================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log com cores
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# ===========================================
# 1. Verifica√ß√£o de Qualidade de C√≥digo
# ===========================================
log_info "Verificando qualidade do c√≥digo..."

echo "üìù Executando ESLint..."
if npm run lint; then
    log_success "ESLint passou"
else
    log_error "ESLint falhou - corrija os erros antes do push"
    exit 1
fi

echo "üî§ Verificando TypeScript..."
if npm run type-check; then
    log_success "TypeScript check passou"
else
    log_error "TypeScript check falhou - corrija os tipos antes do push"
    exit 1
fi

echo "üíÖ Verificando formata√ß√£o com Prettier..."
if npm run format:check; then
    log_success "Formata√ß√£o est√° correta"
else
    log_warning "Formata√ß√£o inconsistente - executando auto-fix..."
    npm run format
    log_success "C√≥digo formatado automaticamente"
fi

# ===========================================
# 2. Testes Unit√°rios
# ===========================================
log_info "Executando testes unit√°rios..."
if npm run test:unit; then
    log_success "Testes unit√°rios passaram"
else
    log_error "Testes unit√°rios falharam"
    exit 1
fi

# ===========================================
# 3. Testes de Integra√ß√£o
# ===========================================
log_info "Executando testes de integra√ß√£o..."
if npm run test:integration; then
    log_success "Testes de integra√ß√£o passaram"
else
    log_error "Testes de integra√ß√£o falharam"
    exit 1
fi

# ===========================================
# 4. Teste de Build
# ===========================================
log_info "Testando build de produ√ß√£o..."
if npm run build; then
    log_success "Build de produ√ß√£o bem-sucedido"
else
    log_error "Build falhou - corrija antes do push"
    exit 1
fi

# ===========================================
# 5. Testes E2E Cr√≠ticos (apenas carrinho)
# ===========================================
log_info "Executando testes E2E cr√≠ticos..."

# Verificar se servidor est√° rodando
if curl -f http://localhost:3001 >/dev/null 2>&1; then
    log_info "Servidor detectado em localhost:3001"

    if npm run test:cart; then
        log_success "Testes de carrinho/checkout passaram"
    else
        log_error "Testes de carrinho/checkout falharam"
        exit 1
    fi
else
    log_warning "Servidor n√£o detectado - pulando testes E2E"
    log_warning "Execute 'npm run dev' em outra aba para testes completos"
fi

# ===========================================
# 6. Teste de Email (opcional)
# ===========================================
log_info "Testando funcionalidade de emails..."
if npm run test:email; then
    log_success "Sistema de emails funcionando"
else
    log_warning "Sistema de emails com problemas - verificar configura√ß√£o SendGrid"
fi

# ===========================================
# Final
# ===========================================
echo ""
echo "üéâ Todas as valida√ß√µes passaram!"
echo "‚ú® Push liberado com seguran√ßa"
echo "=================================================="

exit 0