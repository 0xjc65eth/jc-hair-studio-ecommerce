name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline - JC Hair Studio's 62"]
    types:
      - completed
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Update deployment status
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 1,
              state: 'success',
              environment_url: 'https://jc-hair-studio.vercel.app',
              description: 'Deployment successful'
            })

  # Post-deployment tests
  post-deploy-tests:
    runs-on: ubuntu-latest
    name: Post-Deployment Tests
    needs: deploy
    if: always() && needs.deploy.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for deployment to be ready
        run: npx wait-on https://jc-hair-studio.vercel.app --timeout 120000

      - name: Run smoke tests against production
        run: |
          TEST_BASE_URL=https://jc-hair-studio.vercel.app npm run test:accessibility:headless
        env:
          TEST_HEADLESS: true

      - name: Run production health check
        run: |
          curl -f https://jc-hair-studio.vercel.app/ || exit 1
          curl -f https://jc-hair-studio.vercel.app/produtos || exit 1

      - name: Notify on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Deployment successful! Site is live at https://jc-hair-studio.vercel.app'
            })

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Post-deployment tests failed. Please check the deployment.'
            })