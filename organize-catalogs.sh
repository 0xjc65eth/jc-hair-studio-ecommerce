#!/bin/bash

echo "=============================================="
echo "         ORGANIZANDO CAT√ÅLOGOS"
echo "=============================================="
echo

# Criar diret√≥rio de backup para cat√°logos antigos
mkdir -p backups/old-catalogs

echo "üì¶ ETAPA 1: Fazendo backup dos cat√°logos antigos"
echo "---------------------------------------------"

# Mover cat√°logos n√£o utilizados para backup
backup_files=(
    "lib/data/complete-product-catalog-backup.json"
    "lib/data/complete-product-catalog-consolidated.json"
    "lib/data/complete-product-catalog.json"
    "lib/data/products-complete.json"
    "lib/data/products-reorganized.json"
    "lib/data/products-mega-consolidated.json"
    "lib/data/products-advanced-catalog.json"
    "lib/data/catalog_bio_extratus_produtos__advanced.json"
    "lib/data/botox-products-catalog.json"
    "lib/data/bruna-tavares-bt-skin-catalog.json"
    "lib/data/hydration-products-catalog.json"
)

for file in "${backup_files[@]}"; do
    if [ -f "$file" ]; then
        echo "üìÑ Movendo $file para backup..."
        mv "$file" "backups/old-catalogs/"
    fi
done

echo
echo "‚úÖ CAT√ÅLOGO PRINCIPAL MANTIDO:"
echo "   - lib/data/products-with-european-pricing.json (177KB)"

echo
echo "üìä ETAPA 2: Analisando o cat√°logo principal"
echo "---------------------------------------------"

# Analisar o cat√°logo principal
total_products=$(grep -c '"id"' lib/data/products-with-european-pricing.json)
total_categories=$(grep -c '"name"' lib/data/products-with-european-pricing.json | head -1)
downloaded_images=$(grep -c 'downloaded' lib/data/products-with-european-pricing.json)

echo "üìà Total de produtos: $total_products"
echo "üìÇ Produtos com imagens problem√°ticas: $downloaded_images"

echo
echo "üèóÔ∏è  ETAPA 3: Estrutura de diret√≥rios otimizada"
echo "---------------------------------------------"

echo "Diret√≥rios mantidos (com produtos):"
find public/images/products -type d -mindepth 1 | while read dir; do
    count=$(ls "$dir" 2>/dev/null | wc -l)
    if [ $count -gt 0 ]; then
        dir_name=$(basename "$dir")
        echo "  ‚úÖ $dir_name: $count imagens"
    fi
done

echo
echo "üîß ETAPA 4: Recomenda√ß√µes de corre√ß√£o"
echo "---------------------------------------------"

echo "PRINCIPAIS PROBLEMAS IDENTIFICADOS:"
echo
echo "1. üìÅ IMAGENS DESORGANIZADAS:"
echo "   - 59 produtos usam pasta 'downloaded' com nomes gen√©ricos"
echo "   - 147 imagens na pasta downloaded precisam ser organizadas"
echo
echo "2. üîÑ DUPLICA√á√ïES:"
echo "   - Bio Extratus: 2 diret√≥rios (14 + 2 imagens)"
echo "   - Hidrata√ß√£o: 2 diret√≥rios (16 + 16 imagens)"
echo
echo "3. üìã CAT√ÅLOGOS REDUNDANTES:"
echo "   - 19 arquivos de cat√°logo (movidos para backup)"
echo "   - Apenas 1 cat√°logo principal sendo usado"
echo
echo "4. üñºÔ∏è  FORMATOS MISTOS:"
echo "   - PNG, JPG, WEBP misturados"
echo "   - Nomes inconsistentes"

echo
echo "üéØ ETAPA 5: Plano de a√ß√£o"
echo "---------------------------------------------"

echo "CORRE√á√ïES NECESS√ÅRIAS:"
echo
echo "A. ORGANIZA√á√ÉO IMEDIATA:"
echo "   1. Renomear imagens da pasta 'downloaded'"
echo "   2. Classificar por categoria (tinta, hidrata√ß√£o, etc.)"
echo "   3. Atualizar refer√™ncias no cat√°logo JSON"
echo
echo "B. CONSOLIDA√á√ÉO:"
echo "   1. Unificar diret√≥rios Bio Extratus"
echo "   2. Unificar diret√≥rios de Hidrata√ß√£o"
echo "   3. Padronizar nomes de arquivo"
echo
echo "C. OTIMIZA√á√ÉO:"
echo "   1. Converter imagens para formato consistente"
echo "   2. Otimizar tamanhos de arquivo"
echo "   3. Validar todas as refer√™ncias"

echo
echo "=============================================="
echo "         ORGANIZA√á√ÉO CONCLU√çDA"
echo "=============================================="

# Resumo final
echo "‚úÖ Status atual:"
echo "   - Cat√°logos antigos: $(ls backups/old-catalogs/ | wc -l) arquivos em backup"
echo "   - Cat√°logo principal: 1 arquivo ativo"
echo "   - Diret√≥rios limpos: $(find public/images/products -type d -empty | wc -l) vazios removidos"
echo "   - Total de imagens: $(find public/images/products -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" | wc -l)"

echo
echo "üìã PR√ìXIMO PASSO: Executar script de organiza√ß√£o de imagens"