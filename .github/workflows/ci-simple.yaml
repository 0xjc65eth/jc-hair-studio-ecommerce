name: CI Pipeline - JC Hair Studio

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'

jobs:
  # Code Quality
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Lint & Type Check

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint || echo "Lint issues found"

      - name: Type check
        run: npm run type-check || echo "Type errors found"

  # Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  # Build Test
  build-test:
    runs-on: ubuntu-latest
    name: Build Test
    needs: [lint-and-typecheck]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build application
        run: SKIP_TYPE_CHECK=true npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # E2E and Accessibility Tests
  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [build-test]

    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: testuser
          MONGO_INITDB_ROOT_PASSWORD: testpass
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MONGODB_URI: mongodb://testuser:testpass@localhost:27017/jc-hair-studio-test?authSource=admin
      NEXTAUTH_SECRET: test-secret-key
      NEXTAUTH_URL: http://localhost:3000
      NODE_ENV: test
      TEST_BASE_URL: http://localhost:3000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .next/

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Start application
        run: |
          npm start &
          npx wait-on http://localhost:3000 --timeout 60000
        env:
          PORT: 3000

      - name: Run accessibility tests
        run: npm run test:accessibility:headless
        continue-on-error: true

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            tests/*.json
            tests/*.log
          retention-days: 7

  # Security Audit
  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level=moderate || echo "Security issues found, please review"